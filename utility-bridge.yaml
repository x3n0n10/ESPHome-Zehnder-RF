substitutions:
  hostname: zehnder-comfofan
  device_name: Zehnder ComfoFan
  device_id: zehnder_comfofan

esphome:
  name: ${hostname}
  comment: ${device_name}

esp32:
  board: esp32doit-devkit-v1
  framework:
    type: arduino

# Enable logging
logger:

preferences:
  flash_write_interval: 1h

# Enable Home Assistant API
api:
  encryption:
    key: !secret "zehnder_comfofan_api_key"
  services:
    - service: set_speed
      variables:
        run_speed: int
        run_time: int
      then:
        - lambda: |-
            id(${device_id}_ventilation).setSpeed(run_speed, run_time);
    - service: set_mode
      variables:
        mode: string
      then:
        - lambda: |-
            if (mode == "Auto") {
              id(${device_id}_ventilation).setSpeed(0, 0);
            } else if (mode == "Low") {
              id(${device_id}_ventilation).setSpeed(1, 0);
            } else if (mode == "Medium") {
              id(${device_id}_ventilation).setSpeed(2, 0);
            } else if (mode == "High") {
              id(${device_id}_ventilation).setSpeed(3, 0);
            } else if (mode == "Max_10m") {
              id(${device_id}_ventilation).setSpeed(4, 10);
            } else if (mode == "Max_30m") {
              id(${device_id}_ventilation).setSpeed(4, 30);
            } else if (mode == "Max_60m") {
              id(${device_id}_ventilation).setSpeed(4, 60);
            } else {
              ESP_LOGW("zehnder", "Unknown mode %s", mode);
            }
    - service: reset_pairing
      then:
        - logger.log:
            level: INFO
            format: "Resetting pairing data"
        - lambda: |-
            ESP_LOGI("zehnder", "Forcing pairing reset");
            global_preferences->reset();
        - delay: 2s
        - lambda: |-
            ESP.restart();

ota:
- platform: esphome
  password: !secret "zehnder_comfofan_ota_password"

wifi:
  ssid: !secret "wifi_ssid"
  password: !secret "wifi_password"
  fast_connect: true

  # Enable fallback hotspot (captive portal) in case Wifi connection fails
  ap:
    ssid: "${device_name} hotspot"
    password: !secret "zehnder_comfofan_ap_password"

captive_portal:

web_server:
  port: 80
  local: true
  auth:
    username: admin
    password: !secret "zehnder_comfofan_web_password"

time:
  - platform: sntp
    timezone: Europe/Amsterdam
    servers:
      - "pool.ntp.org"

binary_sensor:
  - platform: template
    name: "${device_name} Timer"
    id: "${device_id}_timer"
    icon: mdi:fan-clock
    lambda: !lambda 'return ${device_id}_ventilation->timer;'

sensor:
  - platform: wifi_signal
    name: "${device_name} RSSI"
    id: "${device_id}_rssi"

  - platform: uptime
    name: "${device_name} Uptime"
    id: "${device_id}_uptime"

  - platform: template
    name: "${device_name} Ventilation Percentage"
    id: "${device_id}_ventilation_percentage"
    state_class: measurement
    unit_of_measurement: '%'
    icon: mdi:percent
    accuracy_decimals: 0
    update_interval: 15s
    lambda: !lambda 'return ${device_id}_ventilation->voltage;'

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${device_name} IP Address"
      id: "${device_id}_ip_address"
    ssid:
      name: "${device_name} SSID"
      id: "${device_id}_ssid"
    bssid:
      name: "${device_name} BSSID"
      id: "${device_id}_bssid"
    mac_address:
      name: "${device_name} MAC"
      id: "${device_id}_mac"

  - platform: template
    name: "${device_name} Ventilation Mode"
    id: "${device_id}_ventilation_mode"
    update_interval: 15s
    icon: mdi:information
    lambda: !lambda 'switch (${device_id}_ventilation->speed) {
                     case 1: return std::string("Low");
                     case 2: return std::string("Medium");
                     case 3: return std::string("High");
                     case 4: return std::string("Max");
                     default: return std::string("Auto");
                 }'

switch:
  - platform: safe_mode
    name: "${device_name} Restart (Safe Mode)"

  - platform: restart
    name: "${device_name} Restart"
    id: ${device_id}_restart

  # Add a pairing reset switch
  - platform: template
    name: "${device_name} Reset Pairing"
    id: "${device_id}_reset_pairing"
    icon: mdi:restart-alert
    optimistic: true
    turn_on_action:
      - logger.log: "Resetting pairing data"
      - lambda: |-
          ESP_LOGI("zehnder", "Forcing pairing reset");
          global_preferences->reset();
      - delay: 1s
      - switch.turn_off: "${device_id}_reset_pairing"
      - delay: 2s
      - lambda: |-
          ESP.restart();

button:
  - platform: template
    id: ${device_id}_auto
    name: ${device_name} Auto
    icon: mdi:fan-auto
    on_press:
      then:
        - lambda: |-
            ${device_id}_ventilation->setSpeed(0, 0);
  - platform: template
    id: ${device_id}_low
    name: ${device_name} Low
    icon: mdi:fan-speed-1
    on_press:
      then:
        - lambda: |-
            ${device_id}_ventilation->setSpeed(1, 0);
  - platform: template
    id: ${device_id}_medium
    name: ${device_name} Medium
    icon: mdi:fan-speed-2
    on_press:
      then:
        - lambda: |-
            ${device_id}_ventilation->setSpeed(2, 0);
  - platform: template
    id: ${device_id}_high
    name: ${device_name} High
    icon: mdi:fan-speed-3
    on_press:
      then:
        - lambda: |-
            ${device_id}_ventilation->setSpeed(3, 0);
  - platform: template
    id: ${device_id}_max_10
    name: ${device_name} Max 10
    icon: mdi:fast-forward-10
    on_press:
      then:
        - lambda: |-
            ${device_id}_ventilation->setSpeed(4, 10);
  - platform: template
    id: ${device_id}_max_30
    name: ${device_name} Max 30
    icon: mdi:fast-forward-30
    on_press:
      then:
        - lambda: |-
            ${device_id}_ventilation->setSpeed(4, 30);
  - platform: template
    id: ${device_id}_max_60
    name: ${device_name} Max 60
    icon: mdi:fast-forward-60
    on_press:
      then:
        - lambda: |-
            ${device_id}_ventilation->setSpeed(4, 60);

# Load external components
external_components:
  - source: github://bramboe/ESPHome-Zehnder-RF
    components: [ nrf905, zehnder ]
    refresh: 0s  # Disable auto refresh to ensure version stability

# SPI
spi:
  clk_pin: GPIO14
  mosi_pin: GPIO13
  miso_pin: GPIO12

# nRF905 config with more robust initialization
nrf905:
  id: "nrf905_rf"
  cs_pin: GPIO15
  cd_pin: GPIO33
  ce_pin: GPIO27
  pwr_pin: GPIO26
  txen_pin: GPIO25
  # am_pin: GPIO32
  # dr_pin: GPIO35

# Ensure nrf905 is fully initialized with a longer delay
interval:
  - interval: 15s
    then:
      - logger.log:
          level: INFO
          format: "nRF905 initialization check"

# The FAN controller
fan:
  - platform: zehnder
    id: ${device_id}_ventilation
    name: "${device_name} Ventilation"
    nrf905: nrf905_rf
    update_interval: "15s"
    on_speed_set:
      - sensor.template.publish:
          id: ${device_id}_ventilation_percentage
          state: !lambda 'return ${device_id}_ventilation->voltage;'
      - binary_sensor.template.publish:
          id: ${device_id}_timer
          state: !lambda 'return ${device_id}_ventilation->timer;'
      - text_sensor.template.publish:
          id: ${device_id}_ventilation_mode
          state: !lambda 'switch (${device_id}_ventilation->speed) {
                             case 1: return "Low";
                             case 2: return "Medium";
                             case 3: return "High";
                             case 4: return "Max";
                             default: return "Auto";
                         }'
